أنا عايزك تبنيلي موقع بسيط بلغة Python باستخدام Flask في الـ Backend، وHTML, CSS, JavaScript في الـ Frontend، مع استخدام قاعدة بيانات SQLite، والموقع هيترفع على استضافة زي Render أو Deta.

الموقع فكرته إنه منصة تعليمية لطلاب الثانوي، والمطلوب فيه:

1. **الواجهة الرئيسية (frontend):**
   - الطلاب يقدروا يدخلوا على الموقع بدون تسجيل.
   - يشوفوا قائمة المواد (زي: رياضيات، فيزياء...).
   - كل مادة فيها أقسام (زي: شرح – مراجعة – امتحانات).
   - كل قسم فيه ملفات (PDF، صور، فيديوهات...).
   - كل ملف تحته:
     - زر "تحميل مباشر".
     - زر "مشاركة على واتساب" يفتح:
       https://wa.me/?text=حمل الملف ده: [رابط الملف]

2. **لوحة التحكم (admin panel):**
   - تسجيل دخول للمشرف.
   - بعد تسجيل الدخول، يقدر المشرف:
     - إضافة / تعديل / حذف المواد.
     - إضافة / تعديل / حذف الأقسام.
     - رفع ملفات وربطها بالمادة والقسم المناسب.
     - يظهرله رابط مباشر للملف يقدر يشاركه على واتساب.
   - الملفات تتحفظ في مجلدات على السيرفر حسب المادة والقسم.

3. **قاعدة البيانات (SQLite):**
   - جدول للمشرف (username / password).
   - جدول للمواد (subjects).
   - جدول للأقسام (sections) المرتبطة بالمواد.
   - جدول للملفات (files) مرتبط بالأقسام، ويحتوي على:
     - اسم الملف.
     - المسار على السيرفر.
     - نوعه.
     - عدد مرات التحميل.

4. **إحصائيات التحميل (للمدير فقط):**
   - صفحة داخل لوحة التحكم اسمها مثلاً /admin/stats.
   - تعرض جدول فيه:
     - اسم الملف.
     - المادة والقسم التابعين له.
     - عدد مرات التحميل.
   - مرتبة من الأكثر تحميلاً للأقل.
   - كل ما طالب يضغط "تحميل"، يتم زيادة عدّاد التحميل في قاعدة البيانات.

5. **تفاصيل تقنية:**
   - Flask لإدارة السيرفر ورفع الملفات.
   - تخزين الملفات في مجلد `uploads/subject/section/filename`.
   - HTML + CSS لتصميم واجهة بسيطة وجذابة.
   - JavaScript لتحسين تجربة المستخدم (مثل: أزرار المشاركة والتحميل).
   - استخدم `url_for` و`send_from_directory` لتحميل الملفات.

6. **الملفات المطلوبة:**
   - `app.py`: ملف تشغيل التطبيق.
   - `templates/`: ملفات HTML (index, admin login, dashboard, stats...).
   - `static/`: ملفات CSS وJS.
   - `uploads/`: لحفظ الملفات.
   - `database.db`: قاعدة البيانات SQLite.
   - `admin_auth.py`: تسجيل الدخول.
   - `utils.py`: أي وظائف مساعدة.

خلي الكود منظم، ومتقسم كويس، مع تعليقات توضح كل خطوة.